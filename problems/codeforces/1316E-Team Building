#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define ull unsigned long long
#define pi pair<ll,ll>
#define vi vector<ll>
#define sc second
#define ft first
#define all(s) s.begin(),s.end()
#define rall(s) s.rbegin(),s.rend()
#define sz(s) s.size()
const ll N = 1e5+5,MOD = 1e9+7,INF = 1e10;
using namespace std;
int dx[] = {-1, -1, 0, 1, 1, 1, 0, -1};
int dy[] = {0, 1, 1, 1, 0, -1, -1, -1};
ll n, k, p, dp[N][1 << 7], a[N][7];
pi b[N];
ll solve(int idx,int mask,int cnt)
{
    if(idx == n)
        return (cnt == p?0:-INF);
    ll &ret = dp[idx][mask];
    if(~ret)
        return ret;
    ret = solve(idx+1,mask,cnt);
    for(int i =0 ; i< p ; ++i){
        if(!((1<<i)&mask))
            ret = max(ret,solve(idx+1,mask|(1<<i),cnt+1)+a[b[idx].sc][i]);
    }
    if(idx - cnt < k)
        ret = max(ret,solve(idx+1,mask,cnt)+b[idx].ft);
    return ret;

}
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> p >> k;
    for(int i = 0; i < n ;++i)
        cin >> b[i].ft,b[i].sc = i;
    sort(b,b+n,greater<pi>());
    for(int i =0 ;i < n ;++i)
        for(int j =0 ; j < p ;++j)
            cin >> a[i][j];
    memset(dp,-1,sizeof dp);
    cout << solve(0,0,0);
}
